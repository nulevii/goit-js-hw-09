{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,GAAcC,SAAEA,EAAQC,SAAEA,IACjC,MAAMC,EAAgBC,KAAKC,SAAW,GAWtC,OAVmB,IAAIC,SAAQ,CAACC,EAASC,KACvCC,YAAW,KACTC,QAAQC,IAAIV,GACRE,EACFI,EAAQ,C,SAAEN,E,SAAUC,IAEpBM,EAAO,C,SAAEP,E,SAAUC,GAAW,GAE/BA,EAAS,G,CAZHU,SAASC,cAAc,SAyC/BC,iBAAiB,UAxBtB,SAAkBC,GAChBA,EAAMC,iBACN,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,OACVnB,SAAWoB,OAAOJ,EAAMK,OACxBC,QAAUF,OAAOH,EAAKI,OACtBE,UAAYH,OAAOF,EAAOG,OAE1B,IAAK,IAAIG,EAAW,EAAGA,EAAWD,UAAWC,GAAY,EACvD1B,EAAc,CAAEC,SAAAyB,E,SAAUxB,WACvByB,MAAK,EAAC1B,SAAEA,EAAQC,SAAEA,MACjB0B,EAAA9B,GAAS+B,OAAOC,QACd,qBAAqB7B,EAAW,QAAQC,MACzC,IAEF6B,OAAM,EAAC9B,SAAEA,EAAQC,SAAEA,MAClB0B,EAAA9B,GAAS+B,OAAOG,QACd,oBAAoB/B,EAAW,QAAQC,MACxC,IAELA,UAAYsB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst FORM = document.querySelector('.form');\n\nfunction createPromise({ position, delayNum }) {\n  const shouldResolve = Math.random() > 0.3;\n  const newPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      console.log(position);\n      if (shouldResolve) {\n        resolve({ position, delayNum });\n      } else {\n        reject({ position, delayNum });\n      }\n    }, delayNum);\n  });\n  return newPromise;\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.target;\n  delayNum = Number(delay.value);\n  stepNum = Number(step.value);\n  amountNum = Number(amount.value);\n\n  for (let position = 0; position < amountNum; position += 1) {\n    createPromise({ position, delayNum })\n      .then(({ position, delayNum }) => {\n        Notiflix.Notify.success(\n          `Fulfilled promise ${position + 1} in ${delayNum}ms`\n        );\n      })\n      .catch(({ position, delayNum }) => {\n        Notiflix.Notify.failure(\n          `Rejected promise ${position + 1} in ${delayNum}ms`\n        );\n      });\n    delayNum += stepNum;\n  }\n}\nFORM.addEventListener('submit', onSubmit);\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delayNum","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","console","log","document","querySelector","addEventListener","event","preventDefault","elements","delay","step","amount","target","Number","value","stepNum","amountNum","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.0f7e2bbc.js.map"}