{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,GAAcC,SAAEA,EAAQC,SAAEA,IACjC,MAAMC,EAAgBC,KAAKC,SAAW,GAWtC,OAVmB,IAAIC,SAAQ,CAACC,EAASC,KACvCC,YAAW,KACTC,QAAQC,IAAIV,GACRE,EACFI,EAAQ,C,SAAEN,E,SAAUC,IAEpBM,EAAO,C,SAAEP,E,SAAUC,GAAW,GAE/BA,EAAS,G,CAZHU,SAASC,cAAc,SAyC/BC,iBAAiB,UAxBtB,SAAkBC,GAChBA,EAAMC,iBACN,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,OACV,IAAIC,EAAWC,OAAOL,EAAMM,OACxBC,EAAYF,OAAOH,EAAOI,OAC1BE,EAAUH,OAAOJ,EAAKK,OAE1B,IAAK,IAAIG,EAAW,EAAGA,EAAWF,EAAWE,GAAY,EACvD3B,EAAc,CAAEC,SAAA0B,EAAUzB,SAAAoB,IACvBM,MAAK,EAAC3B,SAAEA,EAAQC,SAAEA,MACjB2B,EAAA/B,GAASgC,OAAOC,QACd,qBAAqB9B,EAAW,QAAQC,MACzC,IAEF8B,OAAM,EAAC/B,SAAEA,EAAQC,SAAEA,MAClB2B,EAAA/B,GAASgC,OAAOG,QACd,oBAAoBhC,EAAW,QAAQC,MACxC,IAELoB,GAAYI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst FORM = document.querySelector('.form');\n\nfunction createPromise({ position, delayNum }) {\n  const shouldResolve = Math.random() > 0.3;\n  const newPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      console.log(position);\n      if (shouldResolve) {\n        resolve({ position, delayNum });\n      } else {\n        reject({ position, delayNum });\n      }\n    }, delayNum);\n  });\n  return newPromise;\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.target;\n  let delayNum = Number(delay.value);\n  let amountNum = Number(amount.value);\n  let stepNum = Number(step.value);\n\n  for (let position = 0; position < amountNum; position += 1) {\n    createPromise({ position, delayNum })\n      .then(({ position, delayNum }) => {\n        Notiflix.Notify.success(\n          `Fulfilled promise ${position + 1} in ${delayNum}ms`\n        );\n      })\n      .catch(({ position, delayNum }) => {\n        Notiflix.Notify.failure(\n          `Rejected promise ${position + 1} in ${delayNum}ms`\n        );\n      });\n    delayNum += stepNum;\n  }\n}\nFORM.addEventListener('submit', onSubmit);\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delayNum","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","console","log","document","querySelector","addEventListener","event","preventDefault","elements","delay","step","amount","target","delayNum1","Number","value","amountNum","stepNum","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.b5fdf586.js.map"}